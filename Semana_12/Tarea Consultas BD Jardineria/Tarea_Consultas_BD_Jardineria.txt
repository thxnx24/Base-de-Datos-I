1. Devuelve un listado con la ciudad y el teléfono de las oficinas de España.
SELECT ciudad,telefono FROM oficina;

2. Devuelve un listado con todas las formas de pago que aparecen en la tabla pago. Tenga en cuenta que no deben aparecer formas de pago repetidas.
SELECT DISTINCT forma_pago FROM pago;

3. Devuelve un listado con todos los clientes que sean de la ciudad de Madrid y cuyo representante de ventas tenga el código de empleado 11 o 30.
SELECT nombre_cliente FROM cliente WHERE ciudad = 'Madrid' AND (codigo_empleado_rep_ventas = 11 OR codigo_empleado_rep_ventas = 30);

4. Obtén un listado con el nombre de cada cliente y el nombre y apellido de su representante de ventas.
SELECT c.nombre_cliente , e.nombre Nombre_Representante_Ventas, e.apellido1 Apellido_Representante_Ventas 
FROM (cliente c INNER JOIN empleado e)  WHERE (c.codigo_empleado_rep_ventas = e.codigo_empleado);

5. Muestra el nombre de los clientes que hayan realizado pagos junto con el nombre de sus representantes de ventas.
SELECT c.nombre_cliente Nombre_Cliente, e.nombre Nombre_Representante_Ventas FROM pago p JOIN cliente c ON p.codigo_cliente = c.codigo_cliente
LEFT JOIN empleado e ON c.codigo_empleado_rep_ventas = e.codigo_empleado;

6. Devuelve el nombre de los clientes a los que no se les ha entregado a tiempo un pedido.
SELECT DISTINCT c.nombre_cliente FROM cliente c JOIN pedido p ON c.codigo_cliente = p.codigo_cliente WHERE p.fecha_entrega > p.fecha_esperada;

7. Devuelve un listado de las diferentes gamas de producto que ha comprado cada cliente.
SELECT c.nombre_cliente, GROUP_CONCAT(DISTINCT pr.gama ORDER BY pr.gama) AS Gamas_Compradas
FROM cliente c
JOIN pedido pe ON c.codigo_cliente = pe.codigo_cliente
JOIN detalle_pedido dp ON pe.codigo_pedido = dp.codigo_pedido
JOIN producto pr ON dp.codigo_producto = pr.codigo_producto
GROUP BY c.nombre_cliente;

8. Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado.
SELECT e.nombre Nombre_empleado
FROM empleado e
WHERE NOT EXISTS (
    SELECT 1
    FROM cliente c
    WHERE c.codigo_empleado_rep_ventas = e.codigo_empleado
);

9. Devuelve un listado que muestre solamente los clientes que no han realizado ningún pedido.
SELECT c.nombre_cliente Nombre_Cliente FROM cliente c
WHERE NOT EXISTS (SELECT 1 FROM pedido p WHERE p.codigo_cliente = c.codigo_cliente);

10. ¿Cuántos empleados hay en la compañía?
SELECT COUNT(*)  Total_Empleados_Compania FROM empleado;

11. ¿Cuántos clientes tiene cada país?
SELECT pais, COUNT(*) Total_Clientes_Por_Pais FROM cliente GROUP BY pais;

12. ¿Cuál fue el pago medio en 2009?
SELECT AVG(total) Pago_Medio_2009 FROM pago WHERE YEAR(fecha_pago) = 2009;

13. ¿Calcula cuántos clientes tiene cada una de las ciudades que empiezan por M ?
SELECT ciudad, COUNT(*)  Total_Clientes_Ciudad FROM cliente WHERE ciudad LIKE 'M%' GROUP BY ciudad;

14. Devuelve el nombre de los representantes de ventas y el número de clientes al que atiende cada uno.
SELECT e.nombre Nombre_Representante_Ventas, COUNT(c.codigo_cliente) Numero_Clientes
FROM empleado e
LEFT JOIN cliente c ON e.codigo_empleado = c.codigo_empleado_rep_ventas
GROUP BY e.nombre;

15. Calcula el número de clientes que no tiene asignado representante de ventas.
SELECT COUNT(*) Numero_Clientes_Sin_Representante
FROM cliente
WHERE codigo_empleado_rep_ventas IS NULL OR codigo_empleado_rep_ventas = '';

16. Calcula la fecha del primer y último pago realizado por cada uno de los clientes. El listado deberá mostrar el nombre y los apellidos de cada cliente.
SELECT c.nombre_cliente,
       c.nombre_contacto,
       c.apellido_contacto,
       MIN(p.fecha_pago) AS Primer_Pago,
       MAX(p.fecha_pago) AS Ultimo_Pago
FROM cliente c
LEFT JOIN pago p ON c.codigo_cliente = p.codigo_cliente
GROUP BY c.codigo_cliente, c.nombre_cliente, c.nombre_contacto, c.apellido_contacto;

17. Calcula el número de productos diferentes que hay en cada uno de los pedidos.
SELECT dp.codigo_pedido ,p.nombre , COUNT(DISTINCT p.codigo_producto) Numero_Productos_Diferentes 
FROM detalle_pedido dp INNER JOIN producto p ON p.codigo_producto = dp.codigo_producto 
GROUP BY codigo_pedido;

18. Calcula la suma de la cantidad total de todos los productos que aparecen en cada uno de los pedidos.
SELECT codigo_pedido, SUM(cantidad) Cantidad_Total_Productos FROM detalle_pedido
GROUP BY codigo_pedido;
